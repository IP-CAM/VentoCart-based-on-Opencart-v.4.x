
<div id="option">
 
<script  src="view/javascript/Sortable.min.js"></script>


 
<div class="row mb-3">
  <label for="input-option" class="col-sm-2 col-form-label">{{entry_new_option}}</label>
  <div class="col-sm-10">
    <div class="row">
      <!-- New row for both the label and the input/button -->
      <div class="col-md-6">
        <input type="button" id="quich-opt-add" class="btn btn-primary" value="New Option"/>

      </div>
  
    </div>
  </div>
</div>   
  <div class="row mb-3">
    <label for="input-option" class="col-sm-2 col-form-label"> {{ entry_existing_option }}</label>
    <div class="col-sm-10">
      <div class="row">
        <!-- New row for both the label and the input/button -->
        <div class="col-md-6">
          <input type="text" name="option" value="" placeholder="{{ entry_option }}" id="input-option" data-oc-target="autocomplete-option" class="form-control" autocomplete="off"/>
          <ul id="autocomplete-option" class="dropdown-menu"></ul>
          <div class="form-text">{{ help_option }}</div>
        </div>
    
      </div>
    </div>
  </div>


                {% set option_row = 0 %}
                {% set option_value_row = 0 %}

                <ul class="listWithHandle" id="option-row-body-b-{{ option_row }}" style="padding: 0; margin: 0">

                {% for product_option in product_options %}

                <li class="list-group-item">


                {% set showcallendar = '' %}
                {% set showaddbutton = '' %}
                {% if product_option.type != 'date' and product_option.type != 'time' and product_option.type != 'datetime' %}
                {% set showcallendar = 'd-none' %}
                {% endif %}
                {% if product_option.type == 'date' or product_option.type == 'time' or product_option.type == 'datetime' or product_option.type == 'text'
                or product_option.type == 'texarea' 
                %}
                {% set showaddbutton = 'd-none' %}
                {% endif %}
               
                  

                  <fieldset class="border rounded" id="option-row-{{ option_row }}">
                    <div class="accordion" id="accordion{{ option_row }}">
                      <div class="accordion-item">
                        
                          <h2 class="accordion-header" id="heading{{ option_row }}">
                       
                            <div class="d-flex align-items-center">
                            
                              <button class="accordion-button collapsed flex-grow-1" type="button" data-bs-toggle="collapse" data-bs-target="#collapse{{ option_row }}" aria-expanded="true" aria-controls="collapse{{ option_row }}">
                                <span class="my-handle" aria-hidden="true">
                               
                                    <i class="fa-solid mx-2 fa-grip-vertical"></i>
                                  </span>  {{ product_option.name }}
                              </button>
                            
                              <button type="button" data-bs-toggle="tooltip" title="{{ button_option_value_add }}" data-option-row="{{ option_row }}" class="btn mx-1 btn-primary  add-opt-button {{showaddbutton}}">
                                <i class="fa-solid fa-plus-circle"></i>
                            </button>
                            <a href="index.php?route=catalog/option.form&user_token={{ user_token }}&option_id={{ product_option.option_id }}" class="btn mx-1 btn-primary">
                                <i class="fa-solid fa-pencil"></i>
                            </a>
                              <!-- Buttons -->
                              <button type="button" class="btn btn-danger" onclick="removeAllGroup({{ option_row }}, {{ product_option.poption_id }});">
                                <i class="fa-solid fa-minus-circle"></i>
                              </button>
                            </div>
                            
                          </h2>
                          <div id="collapse{{ option_row }}" class="accordion-collapse collapse" aria-labelledby="heading{{ option_row }}" data-bs-parent="#accordion{{ option_row }}">
                              <div class="accordion-body"  >
                                  <!-- Content goes here -->
                           
                                  <div class="row mb-3">
                                    <div class="col-sm-2">
                                        <!-- Your label goes here -->
                                        <label for="input-required-{{ option_row }}" class="col-form-label">{{ entry_required }}</label>
                                    </div>
                                    <div class="col-sm-10">
                                        <!-- Input and buttons in the same row -->
                                        <div class="input-group">
                                            <!-- Input -->
                                            <div style="width: 100px"> 
                                            <select name="product_option[{{ option_row }}][required]" id="input-required-{{ option_row }}" class="form-select">
                                                <option value="1"{% if product_option.required %} selected{% endif %}>{{ text_enabled }}</option>
                                                <option value="0"{% if not product_option.required %} selected{% endif %}>{{ text_disabled }}</option>
                                            </select></div>
                                         
                                     
                                        </div>
                                    </div>
                                </div>
                                

            
                    <input type="hidden" name="product_option[{{ option_row }}][name]" value="{{ product_option.name }}"/> 
                    <input type="hidden" name="product_option[{{ option_row }}][option_id]" value="{{ product_option.option_id }}"/> 
                    <input type="hidden" name="product_option[{{ option_row }}][type]" value="{{ product_option.type }}"/>
                    <input type="hidden" name="product_option[{{ option_row }}][sort_order]"  value="{{ product_option.sort_order }}" class="sort-value">
                    <select class="d-none" id="select-default-row-{{ option_row }}">
                      {% if option_values[product_option.option_id] %}
                      {% for option_value in option_values[product_option.option_id] %}
                   
                      <option value="{{ option_value.option_value_id }}" {% if product_option_value.name==option_value.name
                        %}selected{% endif %}>{{ option_value.name }}</option>
                       
                      {% endfor %}
                      {% endif %}

                    </select>


                    {% set inputType = '' %}
         
                    {% if product_option.type in ['text', 'textarea', 'date', 'time', 'datetime'] %}
                        {% if product_option.type == 'textarea' %}
                            {% set inputType = 'textarea' %}
                        {% else %}
                            {% set inputType = 'text' %}
                        {% endif %}
                 


                    
                        <div class="row mb-3">
                            <label for="input-option-{{ option_row }}" class="col-sm-2 col-form-label">{{ entry_option_value }}</label>
                            <div class="col-sm-10 col-md-4">
                                
                                    <div class="input-group">
                                        <input type="{{ inputType }}" name="product_option[{{ option_row }}][value]" value="{{ product_option.value }}" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control {{ product_option.type }}"  />
                                        <div  class="input-group-text {{showcallendar}}"><i class="fa-regular fa-calendar"></i></div>
                                    </div>
                            </div>
                        </div>
                    {% endif %}
                    <input type="hidden" name="product_option[{{ option_row }}][poption_id]" value="{{ product_option.poption_id }}"/>
                    <input type="hidden" name="product_option[{{ option_row }}][option_id]" value="{{ product_option.option_id  }}"/>
                    
                    {% if product_option.type == 'select' or product_option.type == 'radio' or product_option.type == 'checkbox' or product_option.type == 'image' %}
      
   

                             <!-- start of shortable accordion table -->
                             <ul class="listWithHandle" id="option-row-body-{{ option_row }}" style="padding: 0; margin: 0">
                            {% for product_option_value in product_option.product_option_value %}
                            <li class="list-group-item">
                               
                            <div class="accordion  sortable-accordion" id="accordion{{ option_row }}-{{option_value_row }}">
                              <div class="accordion-item">
                                <div class="d-flex align-items-center">
                                  <button  class="accordion-button  collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse{{ option_row }}-{{option_value_row }}" aria-expanded="true" aria-controls="collapse{{ option_row }}-{{option_value_row }}">
                                    <span class="  my-handle" aria-hidden="true">

                                      <i class="fa-solid mx-2 fa-grip-vertical"></i>
                                    </span>      <span class="option-title-accordion">{{ product_option_value.name  }}  </span>  
                                  </button>

                                  <input type="hidden" value="{{product_option_value.sort_order }}" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][sort_order]" class="sort-value">

                                  <button type="button"   
                         onclick="removeOptionValue('accordion{{ option_row }}-{{option_value_row }}', {{product_option_value.poption_id }});"
                      data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger">
                    <i class="fa-solid fa-minus-circle"></i>
                      </button>
                    </div>
                                 
                                <div id="collapse{{ option_row }}-{{option_value_row }}" class="accordion-collapse collapse " aria-labelledby="heading{{ option_row }}-{{option_value_row }}" data-bs-parent="#accordion{{ option_row }}-{{option_value_row }}">
      
<table class="table table-bordered  ">
<tr>
  <td class="text-start"><strong>{{ entry_image }}</strong></td>
  <td class="text-start">

    <div style="max-width: 60px; display: inline-block">
     
      <img src="{{ product_option_value.image }}" alt="" title="" id="thumb-image-{{ option_row }}-{{ option_value_row }}"
        data-oc-placeholder="{{ placeholder }}" class="  card-img-top " />
    </div>
    </br>
    <button type="button" data-oc-toggle="image" data-oc-target="#input-image-{{ option_row }}-{{ option_value_row }}"
      data-oc-thumb="#thumb-image-{{ option_row }}-{{ option_value_row }}" class="btn btn-info btn-sm btn-block"
      name="product_option_button[{{ option_row }}][{{ option_value_row }}][image]">
      <i class="fa-solid fa-pencil"></i> {{ entry_image }}
    </button>
    <input type="hidden" class="optimage"
      name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][image]"
      id="input-image-{{ option_row }}-{{ option_value_row }}" value="{{ product_option_value.value }}" />

    <button type="button" data-clear="{{ option_row }}-{{ option_value_row }}"
      class="btn clear-button  btn-warning btn-sm btn-block"
      name="product_option_button[{{ option_row }}][{{ option_value_row }}][clear]">
      <i class="fa-regular fa-trash-can"></i> {{ button_clear }}
    </button>

  </td>
</tr>

<tr>

  <td class="text-start"><strong>{{ entry_option_value }}</strong></td>
  <td class="text-start">
    <select  name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][option_value_id]" class="read-only option-select form-select" id="product-option-values-{{ option_row }}">
      {% if option_values[product_option.option_id] %}
      {% for option_value in option_values[product_option.option_id] %}
      <option value="{{ option_value.option_value_id }}" {% if product_option_value.name==option_value.name
        %}selected{% endif %}>{{ option_value.name }}</option>
      {% endfor %}
      {% endif %}
    </select>

    <input type="hidden"
      name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][poption_id]"
      value="{{ product_option_value.poption_id }}" />
    
      
 
  </td>
</tr>

<tr>
  <td class="text-start"><strong>{{ entry_quantity }}</strong></td>
  <td class="text-start">
    <input class="read-only form-control" pattern="[0-9]+([\.,][0-9]+)?" style="min-width: 80px;" type="text"
      name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][quantity]"
      value="{{ product_option_value.quantity }}" />
  </td>
</tr>

<tr>
  <td class="text-start"><strong>{{ entry_subtract }}</strong></td>
  <td class="text-start">
    <select class="read-only form-select"
      name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][subtract]">
      <option value="0" {% if product_option_value.subtract=='0' %}selected{% endif %}>No</option>
      <option value="1" {% if product_option_value.subtract=='1' %}selected{% endif %}>Yes</option>
    </select>
  </td>
</tr>



<tr>
  <td    class="text-start"><strong>{{ entry_price }}</strong></td>
  <td class="text-start">
    <div class="input-group">
      <div style="width: 70px;">
        <select class="read-only form-select "
          name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][price_prefix]">
          <option value="+" {% if product_option_value.price_prefix=='+' %}selected{% endif %}>+</option>
          <option value="-" {% if product_option_value.price_prefix=='-' %}selected{% endif %}>-</option>
          <option value="=" {% if product_option_value.price_prefix=='=' %}selected{% endif %}>=</option>
        </select>
      </div>
      <input class="read-only form-control" pattern="[0-9]+([\.,][0-9]+)?" style="min-width: 80px;" type="text"
        name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][price]"
        value="{{ product_option_value.price }}" />
    </div>
  </td>
</tr>

<tr>

  <td class="text-start"><strong>{{ entry_points }}</strong></td>
  <td class="text-start">
    <div class="input-group">
      <div style="width: 70px;">
        <select class="read-only form-select"
          name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][points_prefix]">
          <option value="+" {% if product_option_value.points_prefix=='+' %}selected{% endif %}>+</option>
          <option value="-" {% if product_option_value.points_prefix=='-' %}selected{% endif %}>-</option>
        </select>
      </div>
      <input class="read-only form-control" style="min-width: 80px;" pattern="[0-9]+([\.,][0-9]+)?" type="text"
        name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][points]"
        value="{{ product_option_value.points }}" />
    </div>
  </td>
</tr>

<tr>

  <td class="text-start" ><strong>{{ entry_weight }}</strong></td>
  <td class="text-start">
    <div class="input-group">
      <div style="width: 70px;">
        <select class="read-only form-select"
          name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][weight_prefix]">
          <option value="+" {% if product_option_value.weight_prefix=='+' %}selected{% endif %}>+</option>
          <option value="-" {% if product_option_value.weight_prefix=='-' %}selected{% endif %}>-</option>
        </select>
      </div>
      <input class="read-only form-control" style="min-width: 80px;" pattern="[0-9]+([\.,][0-9]+)?" type="text"
        name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][weight]"
        value="{{ product_option_value.weight }}" />
    </div>
  </td>
<tr>
<td>
</td>
<td>

<button type="button" data-bs-toggle="tooltip" title="Lock/Unlock"  
data-option-value-row="accordion{{ option_row }}-{{option_value_row }}" data-poption-id="{{product_option_value.poption_id }}"
class="btn btn-primary add-or-edit-btn"> <i class="fa-solid fa-unlock"></i></button>

</td>
</tr>
</tr>
</table>
                             
                         </li>
                              {% set option_value_row = option_value_row + 1 %}
                            {% endfor %}
                          </ul>
                          <!-- end of shortable accordion table -->
                          </tbody>
                          <tfoot>
                          </tfoot>
                        </table>
                   
                      </div>
                    {% endif %}
                  </fieldset>
     
    </li>
                  {% set option_row = option_row + 1 %}
    
                {% endfor %}
   
            </div>
          </ul>





<!--  hidden modal quick add new option -->
<div id="quick-newmodal-option" class="modal fade" style="display: none;">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title"><i class="fa-solid fa-pencil"></i> {{text_add_new_option}}</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <form id="quick-add-form"> 
   
            <div class="mb-3">
                <label for="input-modal-language" class="form-label">{{entry_select_language}}</label>
                <select name="option_language" id="input-modal-language" class="form-select">
                    {% for code, language in languages %}
                        <option value="{{ language.language_id }}">{{ language.name }}</option>
                    {% endfor %}
                </select>
            </div>
 
            <div class="mb-3">
                <label for="input-modal-option-type" class="form-label">{{option_type}}</label>
                <select name="option_type" id="input-modal-option-type" class="form-select">
                    <option value="radio">Radio</option>
                    <option value="checkbox">Checkbox</option>
                    <option value="select">Select</option>
                    <option value="file">File</option>
                    <option value="text">Text</option>
                    <option value="textarea">TextArea</option>
                    <option value="date">Date</option>
                    <option value="time">Time</option>
                    <option value="datetime">DateTime</option>
                </select>
            </div>

            <div class="mb-3">
              <label for="input-modal-option-group" class="form-label">{{entry_group_option_name}}</label>
              <input type="text" name="option_group_name" value="" placeholder="{{entry_group_option_name}}" id="input-modal-option-group" class="form-control option-languaged" />
          </div>
        
          <div id="opts-container">
  
          </div>
          <div class="modal-footer">
              <button type="button" id="button-quick-option-save" class="btn btn-primary ">{{ button_save }}</button>
              <button type="button" class="btn btn-light" data-bs-dismiss="modal">{{ button_cancel  }}</button>
          </div>
        </form>
      </div>
   
  </div>
<!--  End /hidden modal quick add new option -->

<!-- Template, to generate opt, in new option modal -->
  <div id="variable-option-inputset" class="row mb-6 d-none">
    <div class="btn-group">
    <input type="text" name="option_q_name[xxx]" value="" placeholder="{{entry_option_name}}" id="input-modal-option-name-xxx" class="form-control option-languaged" />
    <button type="button" data-bs-toggle="tooltip"  class="btn btn-primary add-q-option" aria-label="Add Option Value" data-bs-original-title="Add Option Value">
      <i class="fa-solid fa-plus-circle"></i></button>
  </div>
</div>
<!-- End /Template, to generate opt, in new option modal -->


</div>


<!-- Template, to generate base opt -->

<li  id="option-row-option_row_placeholder"    class="list-group-item  d-none ">
<fieldset     class="border rounded" >
  <div class="accordion" id="accordionoption_row_placeholder">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingoption_row_placeholder">
          <div class="d-flex align-items-center"> 
            <button  class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseoption_row_placeholder" aria-expanded="true" aria-controls="collapseoption_row_placeholder">
              <span class="  my-handle" aria-hidden="true">
                <i class="fa-solid mx-2 fa-grip-vertical"></i>
              </span>     option_name_placeholder
           
            </button>

                   <!-- Buttons -->
                   <button type="button" data-bs-toggle="tooltip" title="{{ button_option_value_add }}"   data-option-row="option_row_placeholder" class="btn mx-1 btn-primary showaddoption add-opt-button">
                    <i class="fa-solid fa-plus-circle"></i>
                </button>
             
                        
                    
                <a href="index.php?route=catalog/option.form&user_token={{ user_token }}&option_id=option_id_placeholder" class="btn mx-1 btn-primary">
                  <i class="fa-solid fa-pencil"></i>
              </a>
              <button type="button" class="btn  btn-danger" onclick="javascript:$('#option-row-option_row_placeholder').remove();">
                <i class="fa-solid fa-minus-circle"></i>
            </button>
              </div>
            
        </h2>
        <div id="collapseoption_row_placeholder" class="accordion-collapse collapse" aria-labelledby="headingoption_row_placeholder" data-bs-parent="#accordionoption_row_placeholder">
            <div class="accordion-body">
         
                <div class="row mb-3">
                  <div class="col-sm-2">
 
                      <label for="input-required-option_row_placeholder" class="col-form-label">{{ entry_required }}</label>
                  </div>
                  <div class="col-sm-10">
                      <div class="input-group">
                          <!-- Input -->
                          <div style="width: 100px"> 
                          <select name="xxxproduct_option[option_row_placeholder][required]" id="input-required-option_row_placeholder" class="form-select">
                              <option value="1" >{{ text_enabled }}</option>
                              <option value="0" >{{ text_disabled }}</option>
                          </select></div>
                   
                      </div>
                  </div>
              </div>

<div  class="row mb-3 showvalueinput">
  <label for="input-option-option_row_placeholder" class="col-sm-2 col-form-label">{{ entry_option_value }}</label>
  <div class="col-sm-10 col-md-4">
          <div class="input-group">
              <input type="option_type_placeholder" name="xxxproduct_option[option_row_placeholder][value]" value="" placeholder="{{ entry_option_value }}" id="input-option-option_row_placeholder" class="form-control   option_type_placeholder"  />
              <div class="input-group-text showcallendar"><i class="fa-regular fa-calendar"></i></div>
          </div>
  </div>
 
</div>
<ul class="listWithHandle" id="option-row-body-option_row_placeholder" style="padding: 0; margin: 0">

</ul>
</div>
</div>
<select class="d-none" id="select-default-row-option_row_placeholder"></select>
<input type="hidden" name="xxxproduct_option[option_row_placeholder][name]" value="option_name_placeholder"/> 
<input type="hidden" name="xxxproduct_option[option_row_placeholder][option_id]" value="option_id_placeholder"/> 
<input type="hidden" name="xxxproduct_option[option_row_placeholder][type]" value="option_type_placeholder"/>
<input type="hidden" name="xxxproduct_option[option_row_placeholder][sort_order]"  value="100" class="sort-value">
</div>
</div>
</fieldset>
</li>
 
<!-- End /Template, to generate base opt -->



<!-- Template, to generate sub options to options -->
<div id="option-template-div" class=" d-none">   
<li class="list-group-item" >                        
  <div class="accordion  sortable-accordion" id="accordionoption-row-placeholder-option-valuerow-placeholder">
    <div class="accordion-item">

      <div class="d-flex align-items-center"> 
        <button  class="accordion-button  collapsed" style="border: 1px solid #14d946;" type="button" data-bs-toggle="collapse" data-bs-target="#collapseoption-row-placeholder-option-valuerow-placeholder" aria-expanded="true" aria-controls="collapseoption-row-placeholder-option-valuerow-placeholder">
          <span class="  my-handle" aria-hidden="true">
            <i class="fa-solid mx-2 fa-grip-vertical"></i>
          </span>    <span class="option-title-accordion">option-name-placeholder</span>
        </button>

        <button type="button"   
onclick="javascript:$(this).closest('li').remove();"
data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger">
<i class="fa-solid fa-minus-circle"></i>
</button>

<input type="hidden" name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][sort_order]" value="100"  class="sort-value">
</div>

      <div id="collapseoption-row-placeholder-option-valuerow-placeholder" class="accordion-collapse collapse " aria-labelledby="headingoption-row-placeholder-option-valuerow-placeholder" data-bs-parent="#accordionoption-row-placeholder-option-valuerow-placeholder">
<table class="table table-bordered ">
<tr>
<td class="text-start"><strong>{{ entry_image }}</strong></td>
<td class="text-start">
<div style="max-width: 60px; display: inline-block">
<img src="" alt="" title="" id="thumb-image-option-row-placeholder-option-valuerow-placeholder"
data-oc-placeholder="{{ placeholder }}" class="  card-img-top d-none" />
</div>
</br>
<button type="button" data-oc-toggle="image" data-oc-target="#input-image-option-row-placeholder-option-valuerow-placeholder"
data-oc-thumb="#thumb-image-option-row-placeholder-option-valuerow-placeholder" class="btn btn-info btn-sm btn-block"
name="xxxproduct_option_button[option-row-placeholder][option-valuerow-placeholder][image]">
<i class="fa-solid fa-pencil"></i> {{ entry_image }}
</button>
<input type="hidden" class="optimage"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][image]"
id="input-image-option-row-placeholder-option-valuerow-placeholder" value="{{ option.image }}" />
<button type="button" data-clear="option-row-placeholder-option-valuerow-placeholder"
class="btn clear-button  btn-warning btn-sm btn-block"
name="xxxproduct_option_button[option-row-placeholder][option-valuerow-placeholder][clear]">
<i class="fa-regular fa-trash-can"></i> {{ button_clear }}
</button>
</td>
</tr>
<tr>
<td class="text-start"><strong>{{ entry_option_value }}</strong></td>
<td class="text-start insertselect">
 
<input type="hidden"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][poption_id]"
value="undefined" />
 
</td>
</tr>
<tr>
<td class="text-start"><strong>{{ entry_quantity }}</strong></td>
<td class="text-start">
<input class="read-only form-control" pattern="[0-9]+([\.,][0-9]+)?" style="min-width: 80px;" type="text"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][quantity]"
value="0" />
</td>
</tr>
<tr>
<td class="text-start"><strong>{{ entry_subtract }}</strong></td>
<td class="text-start">
<select class="read-only form-select"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][subtract]">
<option value="0"  selected >No</option>
<option value="1" >Yes</option>
</select>
</td>
</tr>
<tr>
<td class="text-start"><strong>{{ entry_price }}</strong></td>
<td class="text-start">
<div class="input-group">
<div style="width: 70px;">
<select class="read-only form-select "
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][price_prefix]">
<option value="+" selected >+</option>
<option value="-" >-</option>
<option value="=" >=</option>
</select>
</div>
<input class="read-only form-control" pattern="[0-9]+([\.,][0-9]+)?" style="min-width: 80px;" type="text"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][price]"
value="0" />
</div>
</td>
</tr>

<tr>
<td class="text-start"><strong>{{ entry_points }}</strong></td>
<td class="text-start">
<div class="input-group">
<div style="width: 70px;">
<select class="read-only form-select"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][points_prefix]">
<option value="+" selected >+</option>
<option value="-" >-</option>
</select>
</div>
<input class="read-only form-control" style="min-width: 80px;" pattern="[0-9]+([\.,][0-9]+)?" type="text"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][points]"
value="0" />
</div>
</td>
</tr>

<tr>
<td class="text-start" ><strong>{{ entry_weight }}</strong></td>
<td class="text-start">
<div class="input-group">
<div style="width: 70px;">
<select class="read-only form-select"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][weight_prefix]">
<option value="+" selected >+</option>
<option value="-" >-</option>
</select>
</div>
<input class="read-only form-control" style="min-width: 80px;" pattern="[0-9]+([\.,][0-9]+)?" type="text"
name="xxxproduct_option[option-row-placeholder][product_option_value][option-valuerow-placeholder][weight]"
value="0" />
</div>
</td>
</tr>
<tr>
<td>
</td>
<td>
<button type="button" data-bs-toggle="tooltip" title="Lock/Unlock" data-option-row="option-row-placeholder"
data-option-value-row="accordionoption-row-placeholder-option-valuerow-placeholder" 
class="btn btn-primary add-or-edit-btn"> <i class="fa-solid fa-unlock"></i></button>
 
</td>
</tr>
</tr>
</table>
      </div>
    </div>
  </div>

</li>
</div>
<!-- End /Template, to generate sub options to options -->


 <script >

  //**** Some JavaScript parts related to options are retained in product_form template ***

              $('#input-option').autocomplete({
  'source': function (request, response) {
      $.ajax({
          url: 'index.php?route=catalog/option.autocomplete&user_token={{ user_token }}&filter_name=' + encodeURIComponent(request),
          dataType: 'json',
          success: function (json) {
              response($.map(json, function (item) {
                  return {
                      category: item['category'],
                      label: item['name'],
                      value: item['option_id'],
                      type: item['type'],
                      option_value: item['option_value']
                  }
              }));
          }
      });
  },
  'select': function (item) {  
    addOption(item);
  }
});

var optionLanguages = {};
 
var option_row = {{ option_row }};

var quickoptcounter = 0;

var option_value_row = {{ option_value_row }};

var selectElement = document.getElementById('input-modal-language');

var selectedOption = selectElement.options[selectElement.selectedIndex];

var preSelectedLanguageId = selectedOption.value;

 
function addOption(option) {
  // Get the hidden template and clone it
  let template = $('#option-row-option_row_placeholder').clone();
  // Remove the 'd-none' class
  template.removeClass('d-none');
  template.attr('id', 'option-row-' + option_row);

  // Replace placeholders with actual values, Remove submission protection tag 'xxx'
  template.html(template.html().replace(/xxx/g, ''));
  template.html(template.html().replace(/option_row_placeholder/g, option_row));
  template.html(template.html().replace(/option_type_placeholder/g, option.type));
  template.html(template.html().replace(/option_name_placeholder/g, option.label));
  template.html(template.html().replace(/option_id_placeholder/g, option.value));

  //hide callendar
  if (option.type != 'date' && option.type != 'time' && option.type != 'datetime') {
    template.find('.showcallendar').remove();
  }
  //hide add option
  if (option.type == 'date' || option.type == 'time' ||
    option.type == 'datetime' || option.type == 'text' || option.type == 'textarea') {

    template.find('.showaddoption').remove();
  }
  if (option.type == 'select' || option.type == 'checkbox' ||
    option.type == 'radio') {
    template.find('.showvalueinput').remove();
  }
  // Append the modified template to the #option element
  $('#option-row-body-b-0').append(template);

  const selectElement = $("#select-default-row-" + option_row);

  // Loop through the option_value array and generate <option> elements
  option.option_value.forEach((optionValue) => {
    const optionElement = $('<option>', {
      value: optionValue.option_value_id,
      text: optionValue.name
    });

    // Append the <option> element to the <select> element
    selectElement.append(optionElement);
  });

  option_row++;
  
}
initializeSortables();
function initializeSortables() {
  $('.listWithHandle').each(function () {
    // Check if Sortable instance already exists
    if (!$(this).data('sortable')) {
      // Create Sortable instance
      Sortable.create(this, {
        handle: '.my-handle',
        animation: 150,
        onEnd: function (event) {
          // Update the values after sorting is complete
          updateSortValues(event.from);
        }
      });
      $(this).data('sortable','true');
    }
  });
}

function updateSortValues(sortableContainer) {
  $("#option").find('li').each(function (index) {
    // Update the value of the input with the position
    $(this).find('.sort-value').val(index + 1);
  });
}
// Call the function to initialize Sortables
 

$(document).on('change', "#input-modal-option-type", function () {

  optionLanguages = {};

  // Get the current value and store it as the previous value
  var currentType = $(this).val();

  // Show or hide opts-container accordingly
  if (currentType === "radio" || currentType === "checkbox" || currentType === "select") {
    $("#opts-container").show();

    // Check if the previous type was not checkbox, radio, or select, then call addQuickOption
    if (previousType !== "checkbox" && previousType !== "radio" && previousType !== "select") {
      addQuickOption();
    }
  } else {
    quickoptcounter = 0;
    $("#opts-container").html('');
    $("#opts-container").hide();
  }

  // Update the previousType variable for the next change event
  previousType = currentType;
});

$(document).ready(function () {

  $('#quick-newmodal-option').on('keypress', 'input', function (event) {
    if (event.which === 13) { // Check if the pressed key is Enter
      event.preventDefault(); // Prevent the default form submission behavior
      $('#button-quick-option-save').trigger('click'); // Trigger click event on the save button
    }
  });

  var languageInputs = {};

  // Iterate over all options in #input-modal-language select
  initializeOptionLanguages();

  function initializeOptionLanguages() {
    // Get the currently selected language
    var selectedLanguageId = $('#input-modal-language').val();

    // Iterate over all options in #input-modal-language select
    $('#input-modal-language option').each(function () {
      var langId = $(this).val();

      // Create an entry for the language in the optionLanguages object
      if (typeof optionLanguages[langId] === 'undefined') optionLanguages[langId] = {};

      // Iterate over all inputs with class "option-languaged"
      $('.option-languaged').each(function () {
        // Get the name attribute of the input
        var inputName = $(this).attr('name');

        // Get the value of the input for the currently selected language
        var inputValue = $(this).val();

        // Save the input value in the optionLanguages object
        if (selectedLanguageId === langId) {
          optionLanguages[langId][inputName] = inputValue;
        } else {
          if (typeof optionLanguages[langId][inputName] === 'undefined') optionLanguages[langId][
            inputName] = '';

        }
      });
    });

  }

  // Event listener for changes in the language select
  $('#input-modal-language').change(function () {
    // Get the selected option's text
    var language = $(this).find(':selected').text();

    // Loop through all text inputs in #opts-container
    $('#quick-add-form input[type="text"]').each(function () {
      // Update the placeholder
      var currentPlaceholder = $(this).attr('placeholder');
      var currentPlaceholder = currentPlaceholder.replace(/\s*\([^)]*\)\s*/, '');
      $(this).attr('placeholder', currentPlaceholder + '  (' + language + ')');
    });


    updateLanguageInputs(preSelectedLanguageId, $(this).val());
    preSelectedLanguageId = $(this).val();
  });
  var formDataOpt;
  // Function to update languageInputs object
  function updateLanguageInputs(oldlangid, newlangid) {

    // Create an entry for the new language if it doesn't exist
    // Check if optionLanguages[oldlangid] is defined
    if (!optionLanguages[oldlangid]) {
      optionLanguages[oldlangid] = {};
    }

    // Check if optionLanguages[newlangid] is defined
    if (!optionLanguages[newlangid]) {
      optionLanguages[newlangid] = {};
    }

    // Iterate over all inputs with class "option-languaged"
    $('.option-languaged').each(function () {
      // Get the name attribute of the input
      let inputName = $(this).attr('name');
      let inputValue = $(this).val();


      if (!optionLanguages[newlangid][inputName]) {
        optionLanguages[newlangid][inputName] = "";
      }
      // Get the language-specific value based on newlangid
      let languageValue = optionLanguages[newlangid][inputName];

      // Save the current input value in the optionLanguages object for the old language
      optionLanguages[oldlangid][inputName] = inputValue;


      // Set the value of the input to the language-specific value
      $(this).val(languageValue);
    });
  }

  $('#button-quick-option-save').click(function () {
    initializeOptionLanguages();
    // Check if all available inputs in .option-languaged have non-empty values
    var isValuesSet = checkAllValuesSet();

    if (isValuesSet) {

      postOption({
        options: processSquareBrackets(optionLanguages),
        type: $("#input-modal-option-type").val()
      });

    }

  });

  function processSquareBrackets(obj) {
    let newObj = {};

    for (let key in obj) {
      if (obj.hasOwnProperty(key)) {
        // Check if the key contains square brackets
        if (key.includes('[') && key.includes(']')) {
          let [propertyName, index] = key.split(']')[0].split('[');

          // Create nested structures if needed
          newObj[propertyName] = newObj[propertyName] || {};

          // Assign the value to the nested structure
          newObj[propertyName][index] = obj[key];
        } else {
          // Copy non-matching keys as is
          newObj[key] = obj[key];
        }

        // Recursively process nested objects
        if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {
          newObj[key] = processSquareBrackets(obj[key]);
        } else if (Array.isArray(obj[key])) {
          // Process each element in the array
          newObj[key] = obj[key].map(element => processSquareBrackets(element));
        }
      }
    }

    return newObj;
  }

  function postOption(options) {
    let product_id =  $("#input-product-id").val();
    if (product_id == 0) {
      alert('Failed, please save that product first');
      return;
    }
    $.ajax({
      type: 'POST',
      url: 'index.php?route=catalog/product.addOption&user_token={{user_token}}&product_id='+  product_id,
      dataType: 'json',
      data: options,
      success: function (response) {
        if (response.status == "ok") {

          //submit occurred reload option tab content
          $("#quick-newmodal-option").modal('hide');
          $("#option").html(
            '<i class="fas fa-spinner fa-spin fa-3x y d-flex align-items-center justify-content-center"></i>  '
            );
          $("#option").load(
            'index.php?route=catalog/product.reloadOptions&user_token={{user_token}}&product_id=' +  product_id
            );

            window.loadVariations();
            
        } else {
          console.log(response);
        }
      },
      error: function (jqXHR, textStatus, errorThrown) {

      }
    });
  }

  // Function to check if all values for the selected language are set
  function checkAllValuesSet() {
    // Check if all inputs in optionLanguages for all languages have non-empty values
    let allValuesSet = true;

    Object.keys(optionLanguages).forEach(function (langId) {
      let langValues = optionLanguages[langId];
      if (allValuesSet) {
        Object.keys(langValues).forEach(function (inputName) {
          // Skip checking if inputName contains "xxx"
          if (inputName.includes("xxx") || !allValuesSet) {
            return; // Skip to the next iteration
          }

          let inputValue = langValues[inputName];

          if (inputValue === '') {
            // Alert if an empty value is found
            let langName = $('#input-modal-language option[value="' + langId + '"]').text();
            $('#input-modal-language').val(langId).trigger('change');
            alert("You have not set up all values for " + langName);

            // Set the flag to false
            allValuesSet = false;
          }

        });
      }
      // Check the flag and exit the outer loop if necessary
      if (!allValuesSet) {
        return false;
      }
    });

    return allValuesSet;
  }

  $('#quich-opt-add').on('click', function () {
    event.preventDefault();
    $('#quick-newmodal-option').modal('show');
    $("#opts-container").html('');
    optionLanguages = {};
    quickoptcounter = 0;
    $("#input-modal-option-group").val('');
    // Iterate over all options in #input-modal-language select
    initializeOptionLanguages();
    addQuickOption();
  });


  // When the value of input-modal-option-type changes
  var previousType;

  window.addQuickOption = () => addQuickOption();

  function addQuickOption() {

    // Clone the template
    var clonedSetHtml = $('#variable-option-inputset').html();

    // Replace all occurrences of 'xxx' with the set number
    clonedSetHtml = clonedSetHtml.replace(/xxx/g, quickoptcounter);
    clonedSetHtml = clonedSetHtml.replace(/zzz/g, quickoptcounter + 1);
    // Increment the counter
    quickoptcounter++;

    // Append the cloned set to the container
    $('#opts-container').append('<div class="row mb-6">' + clonedSetHtml + '</div>');
    initializeOptionLanguages();
  }


});
$(document).on('click', '.clear-button', function () {

  // Get the data-clear value to identify the option set
  var optionValueRow = $(this).data('clear');

  // Update the input value and image source for the corresponding option set
  $('#input-image-' + optionValueRow).val('');
  $('#thumb-image-' + optionValueRow).attr('src', '').addClass('d-none');
});



function removeOptionValue(id, poptionId) {

  $("#" + id).html('');
  $("#option").append('<input type="hidden" name="product_option[' + poptionId + '][delete]" value="' + poptionId +
    '"/>');
}


function removeAllGroup(optionValueRow, poptionId) {

  let newHiddenInput = '';
  $('#option-row-' + optionValueRow + ' input[type="hidden"][name$="[poption_id]"]').each(function () {
    var poptionIds = $(this).val();
    newHiddenInput += '<input type="hidden" name="product_option[' + poptionIds + '][delete]" value="' +
      poptionIds + '"/>';
  });

  $('#option-row-' + optionValueRow).html('');
  $('#option').append(newHiddenInput);
  $('#option').append('<input type="hidden" name="product_option[' + poptionId + '][delete]" value="' + poptionId +
    '"/>');
  $('#option-row-' + optionValueRow).hide();
}
              </script>

              